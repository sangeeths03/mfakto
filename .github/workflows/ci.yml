name: mfakto CI

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '**/*.txt'
      - 'COPYING'
      - '.gitignore'
  pull_request:
    paths-ignore:
      - '**/*.txt'
      - 'COPYING'
      - '.gitignore'
    types:
      - 'opened'
      - 'reopened'
      - 'synchronize'
      - 'ready_for_review'

jobs:
  Linux:
    name: Linux
    runs-on: ubuntu-24.04
    env:
      CC: gcc
      CPP: g++
    steps:
    - uses: actions/checkout@v4
    - name: Setup
      run: |
        sudo apt-get install -y ocl-icd-opencl-dev pocl-opencl-icd
    - name: Build
      run: |
        make -C src -O -j "$(nproc)" CC=${CC} CPP=${CPP}
    - name: Test
      run: |
        ./mfakto -d 11
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: mfakto-linux64
        path: |
          *.cl
          Changelog-mfakto.txt
          COPYING
          datatypes.h
          mfakto
          mfakto.ini
          README-SpecialVersions.txt
          README.txt
          tf_debug.h
          todo.txt
    - name: Create artifact and release asset
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        tar cvjf mfakto-linux64.tar.bz2 *.cl Changelog-mfakto.txt COPYING datatypes.h mfakto mfakto.ini README-SpecialVersions.txt README.txt tf_debug.h todo.txt
    - name: Upload release assets on release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          mfakto-linux64.tar.bz2

  WindowsMSVC:
    name: Windows MSVC
    runs-on: windows-2022
    env:
      OCL_ROOT: "OpenCL-SDK-v2024.05.08-Win-x64"
      OCL_URL: https://github.com/KhronosGroup/OpenCL-SDK/releases/download/v2024.05.08/OpenCL-SDK-v2024.05.08-Win-x64.zip
    steps:
    - uses: actions/checkout@v4
    - uses: ilammy/msvc-dev-cmd@v1
    - name: Setup
      run: |
        Invoke-WebRequest $env:OCL_URL -OutFile OpenCL-SDK.zip
        unzip OpenCL-SDK.zip
        mkdir $env:OCL_ROOT\lib\x86_64
        cp $env:OCL_ROOT\lib\*.lib $env:OCL_ROOT\lib\x86_64
    - name: Build
      run: |
        msbuild mfaktoVS12.vcxproj /property:OCL_ROOT="$env:OCL_ROOT" /property:Configuration=Release
    - name: Create artifact and release asset
      run: |
        Copy-Item -Path Changelog-mfakto.txt, COPYING, README-SpecialVersions.txt, README.txt, todo.txt, src/mfakto.ini -Destination x64/Release/
        Compress-Archive -DestinationPath mfakto-windows-msvc.zip -CompressionLevel Optimal -Path x64/Release/*
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: mfakto-windows-msvc
        path: x64/Release/
    - name: Upload release asset on release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          mfakto-windows-msvc.zip

  WindowsMSYS2:
    name: Windows MSYS2
    runs-on: windows-2022
    env:
      CC: gcc
      CPP: g++
    steps:
    - uses: actions/checkout@v4
    - name: Path Setup
      run: |
        echo "C:\msys64\mingw64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "C:\msys64\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    - name: Setup
      run: |
        pacman -S --needed --noconfirm mingw-w64-x86_64-opencl-icd mingw-w64-x86_64-opencl-headers
    - name: Build
      run: |
        make -C src -O -j $env:NUMBER_OF_PROCESSORS CC=$env:CC CPP=$env:CPP AMD_APP_INCLUDE="-IC:\msys64\mingw64\include" AMD_APP_LIB="-LC:\msys64\mingw64\lib"
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: mfakto-windows-msys2
        path: |
          *.cl
          Changelog-mfakto.txt
          COPYING
          datatypes.h
          mfakto.exe
          mfakto.ini
          README-SpecialVersions.txt
          README.txt
          tf_debug.h
          todo.txt
    - name: Create artifact and release asset
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        Compress-Archive -DestinationPath mfakto-windows-msys2.zip -CompressionLevel Optimal -Path *.cl, Changelog-mfakto.txt, COPYING, datatypes.h, mfakto.exe, mfakto.ini, README-SpecialVersions.txt, README.txt, tf_debug.h, todo.txt
    - name: Upload release assets on release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
           mfakto-windows-msys2.zip

  MacOS:
    name: MacOS
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-13, macos-14]
      fail-fast: false
    env:
      CC: clang
      CPP: clang++
    steps:
    - uses: actions/checkout@v4

    - name: Setup
      run: |
        brew install pocl

    - name: Build with pocl
      run: |
        # Strip -lm from pocl linker flags (not needed on macOS)
        AMD_APP_LIB="$(pkg-config --libs pocl | sed 's/-lm//')"
        make -C src -j "$(sysctl -n hw.ncpu)" \
          CC=${CC} CPP=${CPP} \
          AMD_APP_INCLUDE="$(pkg-config --cflags pocl)" \
          AMD_APP_LIB="$AMD_APP_LIB"

    - name: Test
      run: |
        ./mfakto -d 11

    - name: Cleanup build
      run: |
        make -C src clean

    - name: Build for native OpenCL
      run: |
        make -C src -j "$(sysctl -n hw.ncpu)" CC=${CC} CPP=${CPP}

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: mfakto-${{ matrix.os }}
        path: |
          *.cl
          Changelog-mfakto.txt
          COPYING
          datatypes.h
          mfakto
          mfakto.ini
          README-SpecialVersions.txt
          README.txt
          tf_debug.h
          todo.txt

    - name: Create artifact and release asset
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        tar cvjf mfakto-${{ matrix.os }}.tar.bz2 *.cl Changelog-mfakto.txt COPYING datatypes.h mfakto mfakto.ini README-SpecialVersions.txt README.txt tf_debug.h todo.txt

    - name: Upload release assets on release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          mfakto-${{ matrix.os }}.tar.bz2
